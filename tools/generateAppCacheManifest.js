const fs = require('fs')
const Glob = require('glob').Glob
const _ = require('lodash')
const moment = require('moment')

const baseUrl = ''

console.log(`Generating AppCache manifest...`)

const distPath = (__dirname + '/../dist/').replace(/\\/g, '/')
const manifestFilePath = `${distPath}finnair-cargo-360.appcache`

const assetGlobPatterns = [
  '**/*.*' // @todo Get the excluding of .appcache files here instead of manually filtering later.
]

const template = `CACHE MANIFEST
# This AppCache manifest file is autogenerated. Do not edit manually.
# [VERSION_STRING]

# Explicitly cached 'master entries'.
CACHE:
[FILES]

# Resources that require the user to be online.
NETWORK:
*
`

const run = () => {
  const versionString = moment().format('YYYY-MM-DD HH:mm:ss')
  const lines = []
  assetGlobPatterns.forEach(globPattern => {
    globPattern = distPath + globPattern
    let matches = new Glob(globPattern, {mark: false, sync: true}).found
    matches = matches.filter(m => !m.includes('.appcache'))
    lines.push(matches.map(line => line.split('/dist/')[1]))
  })

  const rows = _.uniq(_.flattenDeep(lines))
    .join('\n')

  const output = template.replace('[FILES]', rows)
    .replace('[VERSION_STRING]', versionString)
    .replace(/\[BASE_URL\]/g, baseUrl)

  fs.writeFileSync(manifestFilePath, output)
  console.log('Done.')
}

run()
